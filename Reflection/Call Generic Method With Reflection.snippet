<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Call Generic Method With Reflection</Title>
      <Author>Portilha</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>
      </Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>MethodName</ID>
          <ToolTip>MethodName</ToolTip>
          <Default>MethodName</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>method</ID>
          <ToolTip>method</ToolTip>
          <Default>method</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>parameter</ID>
          <ToolTip>parameter</ToolTip>
          <Default>parameter</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Delimiter="$"><![CDATA[MethodInfo $method$ = type.GetMethod("$MethodName$")
                                .MakeGenericMethod(typeof($parameter$));

$method$.Invoke(null, null);]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>